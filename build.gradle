//buildscript {
//  repositories {
//  	mavenCentral()
//  	maven {
//  		name = "GradleRIO"
//  		url = "http://dev.imjac.in/maven"
//  	}
//
//  	flatDir name: 'navxDir', dirs: "${System.env.HOME}/wpilib/user/java/lib"
//
//  }
//  dependencies {
//    classpath group: 'jaci.openrio.gradle', name: 'GradleRIO', version: '4.4.3'	    //+ for latest version		//Change this line if you wish to Update GradleRIO
//
//  }
//}

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2017.11.17"
}


def TEAM = 2502
def ROBOT_CLASS = "com.team2502.robot2017.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
}

def robotManifest = {
    attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
    attributes 'Robot-Class': frc.robotClass
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task genJavadoc(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives genJavadoc
}

genJavadoc.onlyIf { project.hasProperty('runJavadoc') }
javadoc.onlyIf { project.hasProperty('runJavadoc') }

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
